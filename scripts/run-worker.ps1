# DiagMod Worker - PowerShell Launch Script
# –ó–∞–ø—É—Å–∫ Celery Worker –¥–ª—è —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á

param(
    [string]$LogLevel = "info",
    [int]$Concurrency = 4,
    [string]$Queue = "",
    [switch]$Beat = $false,
    [switch]$Flower = $false,
    [switch]$Help
)

if ($Help) {
    Write-Host "DiagMod Celery Worker" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:"
    Write-Host "  -LogLevel <level>    –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (debug, info, warning, error)"
    Write-Host "  -Concurrency <num>   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ—Ä–∫–µ—Ä –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 4)"
    Write-Host "  -Queue <name>        –ò–º—è –æ—á–µ—Ä–µ–¥–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏"
    Write-Host "  -Beat               –ó–∞–ø—É—Å—Ç–∏—Ç—å Celery Beat (–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á)"
    Write-Host "  -Flower             –ó–∞–ø—É—Å—Ç–∏—Ç—å Flower (–≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞)"
    Write-Host "  -Help               –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    Write-Host ""
    Write-Host "–ü—Ä–∏–º–µ—Ä—ã:"
    Write-Host "  .\run-worker.ps1                        # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∑–∞–ø—É—Å–∫"
    Write-Host "  .\run-worker.ps1 -LogLevel debug        # –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"
    Write-Host "  .\run-worker.ps1 -Queue ml              # –¢–æ–ª—å–∫–æ ML –∑–∞–¥–∞—á–∏"
    Write-Host "  .\run-worker.ps1 -Beat                  # –° –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º"
    Write-Host "  .\run-worker.ps1 -Flower                # –° –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º"
    exit 0
}

Write-Host "‚öôÔ∏è –ó–∞–ø—É—Å–∫ DiagMod Worker..." -ForegroundColor Green
Write-Host "üîß –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: $LogLevel" -ForegroundColor Yellow
Write-Host "üë• –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ—Å—Ç—å: $Concurrency" -ForegroundColor Yellow

if ($Queue) {
    Write-Host "üìã –û—á–µ—Ä–µ–¥—å: $Queue" -ForegroundColor Yellow
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (-not $env:VIRTUAL_ENV) {
    Write-Warning "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ. –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏..."
    if (Test-Path "venv\Scripts\Activate.ps1") {
        & "venv\Scripts\Activate.ps1"
        Write-Host "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ" -ForegroundColor Green
    } else {
        Write-Error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ó–∞–ø—É—Å—Ç–∏—Ç–µ setup.ps1"
        exit 1
    }
}

# –ó–∞–ø—É—Å–∫ HTTP —Å–µ—Ä–≤–µ—Ä–∞ –º–µ—Ç—Ä–∏–∫ Worker –≤ —Ñ–æ–Ω–µ
Write-Host "üìä –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –º–µ—Ç—Ä–∏–∫ –Ω–∞ –ø–æ—Ä—Ç—É 8002..." -ForegroundColor Cyan
Start-Process -NoNewWindow -FilePath "python" -ArgumentList "scripts\worker_metrics_server.py"

try {
    if ($Beat) {
        Write-Host "üìÖ –ó–∞–ø—É—Å–∫ —Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º –∑–∞–¥–∞—á (Beat)..." -ForegroundColor Cyan
        celery -A src.worker.celery_app worker --beat --loglevel=$LogLevel --concurrency=$Concurrency
    } elseif ($Flower) {
        Write-Host "üå∏ –ó–∞–ø—É—Å–∫ —Å Flower –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º..." -ForegroundColor Cyan
        Write-Host "üåê Flower –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:5555" -ForegroundColor Yellow

        # –ó–∞–ø—É—Å–∫–∞–µ–º Worker –≤ —Ñ–æ–Ω–µ
        Start-Process -NoNewWindow -FilePath "celery" -ArgumentList "-A", "src.worker.celery_app", "worker", "--loglevel=$LogLevel", "--concurrency=$Concurrency"

        # –ó–∞–ø—É—Å–∫–∞–µ–º Flower
        celery -A src.worker.celery_app flower
    } elseif ($Queue) {
        Write-Host "üìã –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏: $Queue" -ForegroundColor Cyan
        celery -A src.worker.celery_app worker --loglevel=$LogLevel --concurrency=$Concurrency --queues=$Queue
    } else {
        celery -A src.worker.celery_app worker --loglevel=$LogLevel --concurrency=$Concurrency
    }
} catch {
    Write-Error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Worker: $_"
    Write-Host "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:"
    Write-Host "  1. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (.\setup.ps1 -Dev)"
    Write-Host "  2. –ó–∞–ø—É—â–µ–Ω Redis (docker-compose up -d redis)"
    Write-Host "  3. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞"
    exit 1
}
