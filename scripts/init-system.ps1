# DiagMod - –ü–æ–ª–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫: —Å–æ–∑–¥–∞–Ω–∏–µ –ë–î, –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8
$OutputEncoding = [System.Text.Encoding]::UTF8
chcp 65001 | Out-Null

param(
    [switch]$SkipDocker,
    [switch]$SkipTraining,
    [switch]$Help
)

if ($Help) {
    Write-Host "DiagMod System Initialization" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:"
    Write-Host "  -SkipDocker     –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–ø—É—Å–∫ Docker —Å–µ—Ä–≤–∏—Å–æ–≤"
    Write-Host "  -SkipTraining   –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ ML –º–æ–¥–µ–ª–µ–π"
    Write-Host "  -Help           –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    Write-Host ""
    Write-Host "–ü—Ä–∏–º–µ—Ä—ã:"
    Write-Host "  .\init-system.ps1                  # –ü–æ–ª–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è"
    Write-Host "  .\init-system.ps1 -SkipDocker      # –ë–µ–∑ Docker"
    Write-Host "  .\init-system.ps1 -SkipTraining    # –ë–µ–∑ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π"
    exit 0
}

Write-Host "üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã DiagMod..." -ForegroundColor Green
Write-Host "=====================================" -ForegroundColor Green
Write-Host ""

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã
function Test-Command {
    param($Command)
    try {
        Get-Command $Command -ErrorAction Stop
        return $true
    } catch {
        return $false
    }
}

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
Write-Host "1. üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
if (Test-Command python) {
    $pythonCmd = "python"
    $pythonVersion = & python --version
    Write-Host "   ‚úÖ Python: $pythonVersion" -ForegroundColor Green
} elseif (Test-Command py) {
    $pythonCmd = "py"
    $pythonVersion = & py --version
    Write-Host "   ‚úÖ Python: $pythonVersion" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
    Write-Host "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ .\scripts\install-simple.ps1" -ForegroundColor Yellow
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if (-not $SkipDocker) {
    if (Test-Command docker) {
        Write-Host "   ‚úÖ Docker –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
        Write-Host "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ -SkipDocker" -ForegroundColor Yellow
        exit 1
    }

    if (Test-Command docker-compose) {
        Write-Host "   ‚úÖ Docker Compose –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
        exit 1
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if ($env:VIRTUAL_ENV) {
    Write-Host "   ‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ" -ForegroundColor Green
} else {
    Write-Host "   ‚ö†Ô∏è –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ" -ForegroundColor Yellow
    Write-Host "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: venv\Scripts\Activate.ps1" -ForegroundColor Yellow
}

Write-Host ""

# 2. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
Write-Host "2. üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..." -ForegroundColor Yellow

$directories = @(
    "data\raw",
    "data\processed",
    "data\features",
    "data\exports",
    "models\anomaly_detection",
    "models\prediction",
    "logs",
    "configs\ssl"
)

foreach ($dir in $directories) {
    if (-not (Test-Path $dir)) {
        New-Item -ItemType Directory -Path $dir -Force | Out-Null
        Write-Host "   ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $dir" -ForegroundColor Green
    } else {
        Write-Host "   ‚ÑπÔ∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $dir" -ForegroundColor Cyan
    }
}

Write-Host ""

# 3. –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ .env
Write-Host "3. ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..." -ForegroundColor Yellow

if (-not (Test-Path ".env")) {
    $envContent = @"
# DiagMod Environment Configuration

# Database
DATABASE_URL=postgresql+asyncpg://diagmod_user:diagmod_password@localhost:5432/diagmod

# Redis
REDIS_URL=redis://localhost:6379/0

# Celery
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/2

# API
API_HOST=0.0.0.0
API_PORT=8000

# Security
SECRET_KEY=diagmod-secret-key-change-in-production-$(Get-Random)
JWT_SECRET_KEY=diagmod-jwt-secret-$(Get-Random)
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Logging
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE_PATH=logs/diagmod.log

# Monitoring
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=8001
WORKER_METRICS_PORT=8002

# Environment
ENVIRONMENT=development

# ML Models
MODEL_PATH=models
RETRAIN_INTERVAL_HOURS=24
ANOMALY_THRESHOLD=0.7

# Data Processing
MAX_FILE_SIZE_MB=100
BATCH_SIZE=1000
FEATURE_WINDOW_SIZE=1024
"@
    $envContent | Out-File -FilePath ".env" -Encoding UTF8
    Write-Host "   ‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env" -ForegroundColor Green
} else {
    Write-Host "   ‚ÑπÔ∏è –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Cyan
}

Write-Host ""

# 4. –ó–∞–ø—É—Å–∫ Docker —Å–µ—Ä–≤–∏—Å–æ–≤
if (-not $SkipDocker) {
    Write-Host "4. üê≥ –ó–∞–ø—É—Å–∫ Docker —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Yellow

    try {
        Write-Host "   –ó–∞–ø—É—Å–∫ PostgreSQL –∏ Redis..." -ForegroundColor Cyan
        & docker-compose up -d postgres redis

        Write-Host "   –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Cyan
        Start-Sleep -Seconds 10

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
        $pgStatus = & docker-compose ps postgres --format "table"
        $redisStatus = & docker-compose ps redis --format "table"

        Write-Host "   ‚úÖ Docker —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã" -ForegroundColor Green
    } catch {
        Write-Host "   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Docker: $_" -ForegroundColor Red
        Write-Host "   –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é: docker-compose up -d postgres redis" -ForegroundColor Yellow
    }
} else {
    Write-Host "4. ‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫ Docker —Å–µ—Ä–≤–∏—Å–æ–≤ (—Ñ–ª–∞–≥ -SkipDocker)" -ForegroundColor Yellow
}

Write-Host ""

# 5. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
Write-Host "5. üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Yellow

try {
    Write-Host "   –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π Alembic..." -ForegroundColor Cyan
    & $pythonCmd -m alembic upgrade head
    Write-Host "   ‚úÖ –°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: $_" -ForegroundColor Red
    Write-Host "   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Yellow
}

Write-Host ""

# 6. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
Write-Host "6. üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Yellow

try {
    Write-Host "   –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Cyan
    & $pythonCmd scripts\load_initial_data.py
    Write-Host "   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã" -ForegroundColor Green
} catch {
    Write-Host "   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: $_" -ForegroundColor Yellow
    Write-Host "   –≠—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ, –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–∑–∂–µ" -ForegroundColor Cyan
}

Write-Host ""

# 7. –û–±—É—á–µ–Ω–∏–µ ML –º–æ–¥–µ–ª–µ–π
if (-not $SkipTraining) {
    Write-Host "7. üß† –û–±—É—á–µ–Ω–∏–µ ML –º–æ–¥–µ–ª–µ–π..." -ForegroundColor Yellow

    try {
        Write-Host "   –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –¥–µ—Ç–µ–∫—Ü–∏–∏ –∞–Ω–æ–º–∞–ª–∏–π..." -ForegroundColor Cyan
        & $pythonCmd scripts\train_models.py
        Write-Host "   ‚úÖ –ú–æ–¥–µ–ª–∏ –æ–±—É—á–µ–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã" -ForegroundColor Green
    } catch {
        Write-Host "   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π: $_" -ForegroundColor Yellow
        Write-Host "   –ú–æ–¥–µ–ª–∏ –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å –ø–æ–∑–∂–µ –∫–æ–º–∞–Ω–¥–æ–π: python scripts\train_models.py" -ForegroundColor Cyan
    }
} else {
    Write-Host "7. ‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π (—Ñ–ª–∞–≥ -SkipTraining)" -ForegroundColor Yellow
}

Write-Host ""

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
Write-Host "8. ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã..." -ForegroundColor Yellow

$allReady = $true

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
try {
    & $pythonCmd -c "import src.api.main, src.worker.tasks, src.ml.train; print('–ú–æ–¥—É–ª–∏ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã')"
    Write-Host "   ‚úÖ Python –º–æ–¥—É–ª–∏ –≥–æ—Ç–æ–≤—ã" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π: $_" -ForegroundColor Red
    $allReady = $false
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î (–µ—Å–ª–∏ Docker –∑–∞–ø—É—â–µ–Ω)
if (-not $SkipDocker) {
    try {
        & $pythonCmd -c "from src.database.connection import test_connection; import asyncio; asyncio.run(test_connection())"
        Write-Host "   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
    } catch {
        Write-Host "   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: $_" -ForegroundColor Red
        $allReady = $false
    }
}

Write-Host ""

# 9. –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
Write-Host "=" * 50 -ForegroundColor Green
if ($allReady) {
    Write-Host "üéâ –°–∏—Å—Ç–µ–º–∞ DiagMod —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ DiagMod —á–∞—Å—Ç–∏—á–Ω–æ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ" -ForegroundColor Yellow
}
Write-Host "=" * 50 -ForegroundColor Green

Write-Host ""
Write-Host "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞:" -ForegroundColor Cyan
Write-Host ""

Write-Host "1. –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞:" -ForegroundColor White
Write-Host "   .\scripts\run-api.ps1" -ForegroundColor Gray
Write-Host "   –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000" -ForegroundColor Gray
Write-Host ""

Write-Host "2. –ó–∞–ø—É—Å–∫ Worker (–≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ PowerShell):" -ForegroundColor White
Write-Host "   .\scripts\run-worker.ps1" -ForegroundColor Gray
Write-Host ""

Write-Host "3. –ó–∞–ø—É—Å–∫ Dashboard (–≤ —Ç—Ä–µ—Ç—å–µ–º –æ–∫–Ω–µ PowerShell):" -ForegroundColor White
Write-Host "   .\scripts\run-dashboard.ps1" -ForegroundColor Gray
Write-Host "   –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8501" -ForegroundColor Gray
Write-Host ""

Write-Host "4. –ò–ª–∏ –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ Docker:" -ForegroundColor White
Write-Host "   docker-compose up -d" -ForegroundColor Gray
Write-Host ""

Write-Host "5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã:" -ForegroundColor White
Write-Host "   .\scripts\status.ps1 -Detailed" -ForegroundColor Gray
Write-Host ""

Write-Host "üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:" -ForegroundColor Cyan
Write-Host "   API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs" -ForegroundColor Gray
Write-Host "   –ú–µ—Ç—Ä–∏–∫–∏ API: http://localhost:8000/metrics" -ForegroundColor Gray
Write-Host "   –ú–µ—Ç—Ä–∏–∫–∏ Worker: http://localhost:8002/metrics" -ForegroundColor Gray
Write-Host ""

Write-Host "üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor Cyan
Write-Host "   –ó–∞–≥—Ä—É–∑–∫–∞ CSV –¥–∞–Ω–Ω—ã—Ö: python scripts\load_csv_data.py <file>" -ForegroundColor Gray
Write-Host "   –ü–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π: python scripts\train_models.py" -ForegroundColor Gray
Write-Host "   –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤: python scripts\generate_reports.py" -ForegroundColor Gray
